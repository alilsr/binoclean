#ifndef XEvent
#include <X11/X.h>
#endif

//Ali = = = =
//#include <Xm/Xm.h>

//Ali = = = = 

#include "WinDefs.h"
#ifndef XPROTOS
#define XPROTOS 1
void draw_dot(float rotatefactor[XY], float hdotsize[XY], float xpos, float ypos, float offset, float standing_disp,  float dotwidth, int mode, Locator *pos, int flag, ball_s *ball);
void ParamButtons(Widget w, XtPointer data, XmPushButtonCallbackStruct *cbs);
void handle_expbuttons(Widget w, XtPointer data, XmPushButtonCallbackStruct *cbs);
void handle_penbuttons(Widget w, XtPointer data, XmPushButtonCallbackStruct *cbs);
void graphlist_popup(Widget parent);
void penetration_popup(Widget parent, int mode, Winloc pos);
void help_popup(Widget parent, char *file);
void cmd_popup(Widget parent, char *file);
void expval_popup(Widget parent, int mode);
void SetAllItem(Expt *ex, Widget w);
void SetAllSliders();
void allfpset(Sliderdat *fpd);
void allfproc(Fpslider *fp, float val, XEvent *event);
void acq_callback(Widget item, int bit, XmToggleButtonCallbackStruct *cbs);
Widget make_helpmenu(MenuItem *pmenu);
Widget make_quickmenu();
void showallexpts(Widget caller);
void all_cycle_proc(Widget w, int id, int val);
int AddCodesToSlider(Sliderdat *slider);
void HideWidgetDecoration(Widget w, int up);
void ShowWidgetDecoration(Widget w);
void HideFrame(Widget wi, Stimulus *st, XmAnyCallbackStruct *cbs);
void make_interface(Widget toplevel, Stimulus *st);
void setmenu_callback(Widget item, int val, XmToggleButtonCallbackStruct *cbs);
Widget exp_options(Widget parent, Stimulus *st, Cursor cursor);
void option_popup(char **strings, int proc, Winloc pos);
Widget exp_popup(Widget parent, Stimulus *st, Cursor cursor);
void ListGraphs(Widget w);
void ListExpStims(Widget w);
void graphlist_proc(Widget w, XtPointer client_data, XmListCallbackStruct *cbs);
void stimlist_proc(Widget w, XtPointer client_data, XmListCallbackStruct *cbs);
void SetExpItem(Expt *ex, Widget w);
void SetRunButton(Widget button);
void expfpset(Sliderdat *fpd);
void expfproc(Fpslider *fp, float val, XEvent *event);
void setthirdexp(Widget w, int id, int val);
void setsecondexp(Widget w, int id, int val);
void bw_text_proc(Widget item, caddr_t client_data,XmAnyCallbackStruct *cbs);
void cycle_proc(Widget w, int id, int val);
void setexp(Widget w, int id, int val);
vcoord CalcXPos(struct plotdata *plot, int j);
void helpbuttons(Widget w, XtPointer data, XmAnyCallbackStruct *cbs);
void expbuttons(Widget w, XtPointer data, XmAnyCallbackStruct *cbs);
void testexpt(Widget w, Stimulus *st, XmAnyCallbackStruct *cbs);
void runexpt(Widget w, Stimulus *st, XmAnyCallbackStruct *cbs);
int RunExptStimSeq(Stimulus *st, int nframes, int nstims, Display *D);
int RunStrobedStim(Stimulus *st, int n, Display *D);
int RunHarrisStim(Stimulus *st, int n, Display *D, Window win);
int CheckKeyboard(Display *D, Widget W);
int RunExptStim(Stimulus *st, int n, Display *D, Window win);
void numeric_proc(Widget w, int val, int data);
Fpslider *FindSlider(Fpslider *fp, int code);
int SetWindow();
Widget wurtz_popup(Widget parent, Stimulus *st, Cursor cursor);
void SaveLog(Widget fs, XtPointer client_data,XmFileSelectionBoxCallbackStruct *cbs);
Widget log_popup(Widget parent, Stimulus *st, Cursor cursor);
Widget unit_popup(Widget parent, Stimulus *st, Cursor cursor);
void wurtz_text_proc(Widget item, caddr_t client_data,XmAnyCallbackStruct *cbs);
void SetWItem(Wurtz *fix, Widget w);
void wurtzfpset(Sliderdat *fpd);
void wurtzfproc(Fpslider *fp, float val, XEvent *event);
void wnumeric_proc(Widget w, int val, int data);
Widget bw_popup(Widget parent, Cursor cursor, Winloc pos);
void MakePosVisible(Widget w, int pos);
void bwnumeric_proc(Widget w, int val, int data);
void SetFSD(Widget w, int chan);
void SetToggles(Widget rc, int chan);
void SetBWItem(Bwio *ex, Widget w);
void bwtoggle_callback(Widget item, int bit, XmToggleButtonCallbackStruct *cbs);
void bwfproc(Fpslider *fp, float val, XEvent *event);
void bwfpset(Sliderdat *fpd);
void bw_cycle_proc(Widget w, int id, int val);
Widget afc_popup(Widget parent, Stimulus *st, Cursor cursor, Winloc pos);
void SetAItem(Wurtz *fix, Widget w);
void afcfpset(Sliderdat *fpd);
void afcfproc(Fpslider *fp, float val, XEvent *event);
void SetWidgetTime(Widget w);
void SetWidgetTimes();
void FCloseShell(Widget w, Widget shell);
void FDestroyShell(Widget w, Widget shell);
void SetWidgetColor(float color);
void forcecolor(Widget w);
void fiterate(Widget w, String att, XtArgVal val);
void handle_pushbuttons(Widget w, XtPointer data, XmPushButtonCallbackStruct *cbs);
void ButtonDrag(vcoord *start, vcoord *end, XEvent e);
void CntrlDrag(vcoord *start, vcoord *end, XEvent e);
void ShiftDrag(vcoord *start, vcoord *end, XEvent e);
void ButtonReleased(vcoord *start, vcoord *end, XEvent e);
void ButtonDown(vcoord *start, vcoord *end, XEvent e);
void CntrlButtonDown(vcoord *start, vcoord *end, XEvent e);
void CntrlButtonRelease(vcoord *start, vcoord *end, XEvent e);
void ShiftButtonDown(vcoord *start, vcoord *end, XEvent e);
void ShiftButtonRelease(vcoord *start, vcoord *end, XEvent e);
int HandleXevent(Display *dpy, XEvent e);
int handle_keypress(KeySym sym, XEvent e);
Bool test_event(Display *dpy, XEvent *event, char *s);
int SetStimulus(Stimulus *st, float val, int code, XEvent *event);
void sfpset(Sliderdat *fpd);
void fpproc(Fpslider *fp,float val, XEvent *event);
void fnumeric_proc(Widget w, int val, int data);
void stimtoggle_callback(Widget item, int bit, XmToggleButtonCallbackStruct *cbs);
void toggle_callback(Widget item, int bit, XmToggleButtonCallbackStruct *cbs);
void load_file(Widget fs, XtPointer client_data,XmFileSelectionBoxCallbackStruct *cbs);
void SaveExpt(Widget fs, XtPointer client_data,XmFileSelectionBoxCallbackStruct *cbs);
void save_file_popup(Widget parent, char *arg);
void read_file_popup(Widget parent, char *arg);
void set_stimulus(Widget w, char *type);
void set_run(Widget w, char *type);
void plotexptbutton(Widget w, Stimulus *st, XmAnyCallbackStruct *cbs);
void setdisplay(Display *dis);
Window myXWindow();
static int ErrorHandler(Display *xDisplay, XErrorEvent *event);
static XVisualInfo *FindMainVisual(int depth, int stereo);
static int WaitForMainWindow(Display *d, XEvent *e, char *arg);
GLenum myInitWindow(char *title, int x, int y, int w, int h, int depth, int stereo, Window parent);
void cyberfpset(Sliderdat *fpd);
void cyberfproc(Fpslider *fp, float val, XEvent *event);
void cyber_numeric_proc(Widget w, int val, int data);
Widget cyber_popup(Widget parent);
void cyber_cycle_proc(Widget w, int id, int val);
void mark_button(Widget w, XtPointer data, XmAnyCallbackStruct *cbs);
void step_button(Widget w, XtPointer data, XmAnyCallbackStruct *cbs);
void teststep_button(Widget w, XtPointer data, XmAnyCallbackStruct *cbs);
void stepfpset(Sliderdat *fpd);
void stepfproc(Fpslider *fp, float val, XEvent *event);
void SetStepItem(Widget w);
void SetStepPanel(Widget form);
void step_numeric_proc(Widget w, int val, int data);
void stepper_text_proc(Widget item, caddr_t client_data,XmAnyCallbackStruct *cbs);
void stepproc(Widget w, int type, XmArrowButtonCallbackStruct *cbs);
Widget step_popup(Widget parent, char *port, Cursor cursor, Winloc pos);
void step_cycle_proc(Widget w, int id, int val);
#endif
